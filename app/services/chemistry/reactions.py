import re


class Reactions:
  """
  Service class to calculate the estequiometria of reaction in gas fuel.
  """
  def __init__(self, input_data, fuel_fractions, fuel_molar_mass, substance_repository):
    self.input = input_data
    self.fuel_fractions = fuel_fractions
    self.fuel_molar_mass = fuel_molar_mass
    self.substance_repo = substance_repository
  
  def parse_formula(self, formula: str) -> tuple[int, int]:
    """
    Function to obtain number of elements of fuel substance with regex
    """
    carbon = int(re.search(r"C(\d*)", formula).group(1) or 1) if "C" in formula else 0
    hydrogen = int(re.search(r"H(\d*)", formula).group(1) or 1) if "H" in formula else 0
    return carbon, hydrogen


  def molar_flow_stoichiometric_calc(self):
    """
    Calculation of molar flow of reagents and products.
    """
    oxygen_stoichiometric = 0
    carbon_dioxide_stoichiometric = 0
    water_stoichiometric = 0

    fuel_molar_flow = self.input.fuel_mass_flow/self.fuel_molar_mass
    db_components = self.substance_repo.get_all()

    for substance, fraction in self.fuel_fractions.items():
      substance_formula = db_components[substance]["formula"]
      substance_lhv = db_components[substance]["lower_calorific_value"]

      if substance_lhv == 0:
        continue
      
      carbon, hydrogen = self.parse_formula(substance_formula)
      
      # Calculating the stoichiometric coefficient of substances from the number of elements
      CO2_coefficient = int(carbon)
      H2O_coefficient = int(hydrogen)/2
      O2_coefficient = (CO2_coefficient * 2 + H2O_coefficient) / 2
      
      # Calculating oxygen_stoichiometric consumed by substance of fuel
      oxygen_stoichiometric += (fuel_molar_flow * fraction) * O2_coefficient

      # Calculating carbon_dioxide_stoichiometric and water_stoichiometric generated by substance of fuel
      carbon_dioxide_stoichiometric += (fuel_molar_flow * fraction) * CO2_coefficient
      water_stoichiometric += (fuel_molar_flow * fraction) * H2O_coefficient

    return {
      "oxygen_stoichiometric": oxygen_stoichiometric,
      "carbon_dioxide_stoichiometric": carbon_dioxide_stoichiometric,
      "water_stoichiometric": water_stoichiometric
    } 